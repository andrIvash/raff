// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$s-arrowu-name: 's-arrowu';
$s-arrowu-x: 97px;
$s-arrowu-y: 68px;
$s-arrowu-offset-x: -97px;
$s-arrowu-offset-y: -68px;
$s-arrowu-width: 15px;
$s-arrowu-height: 9px;
$s-arrowu-total-width: 123px;
$s-arrowu-total-height: 86px;
$s-arrowu-image: '../img/sprite/sprite.png';
$s-arrowu: (97px, 68px, -97px, -68px, 15px, 9px, 123px, 86px, '../img/sprite/sprite.png', 's-arrowu', );
$s-burger-name: 's-burger';
$s-burger-x: 97px;
$s-burger-y: 36px;
$s-burger-offset-x: -97px;
$s-burger-offset-y: -36px;
$s-burger-width: 24px;
$s-burger-height: 22px;
$s-burger-total-width: 123px;
$s-burger-total-height: 86px;
$s-burger-image: '../img/sprite/sprite.png';
$s-burger: (97px, 36px, -97px, -36px, 24px, 22px, 123px, 86px, '../img/sprite/sprite.png', 's-burger', );
$s-coin-name: 's-coin';
$s-coin-x: 0px;
$s-coin-y: 58px;
$s-coin-offset-x: 0px;
$s-coin-offset-y: -58px;
$s-coin-width: 28px;
$s-coin-height: 28px;
$s-coin-total-width: 123px;
$s-coin-total-height: 86px;
$s-coin-image: '../img/sprite/sprite.png';
$s-coin: (0px, 58px, 0px, -58px, 28px, 28px, 123px, 86px, '../img/sprite/sprite.png', 's-coin', );
$s-cross-name: 's-cross';
$s-cross-x: 51px;
$s-cross-y: 0px;
$s-cross-offset-x: -51px;
$s-cross-offset-y: 0px;
$s-cross-width: 36px;
$s-cross-height: 36px;
$s-cross-total-width: 123px;
$s-cross-total-height: 86px;
$s-cross-image: '../img/sprite/sprite.png';
$s-cross: (51px, 0px, -51px, 0px, 36px, 36px, 123px, 86px, '../img/sprite/sprite.png', 's-cross', );
$s-health-name: 's-health';
$s-health-x: 38px;
$s-health-y: 58px;
$s-health-offset-x: -38px;
$s-health-offset-y: -58px;
$s-health-width: 26px;
$s-health-height: 26px;
$s-health-total-width: 123px;
$s-health-total-height: 86px;
$s-health-image: '../img/sprite/sprite.png';
$s-health: (38px, 58px, -38px, -58px, 26px, 26px, 123px, 86px, '../img/sprite/sprite.png', 's-health', );
$s-smile-name: 's-smile';
$s-smile-x: 97px;
$s-smile-y: 0px;
$s-smile-offset-x: -97px;
$s-smile-offset-y: 0px;
$s-smile-width: 26px;
$s-smile-height: 26px;
$s-smile-total-width: 123px;
$s-smile-total-height: 86px;
$s-smile-image: '../img/sprite/sprite.png';
$s-smile: (97px, 0px, -97px, 0px, 26px, 26px, 123px, 86px, '../img/sprite/sprite.png', 's-smile', );
$s-wallet-name: 's-wallet';
$s-wallet-x: 0px;
$s-wallet-y: 0px;
$s-wallet-offset-x: 0px;
$s-wallet-offset-y: 0px;
$s-wallet-width: 41px;
$s-wallet-height: 48px;
$s-wallet-total-width: 123px;
$s-wallet-total-height: 86px;
$s-wallet-image: '../img/sprite/sprite.png';
$s-wallet: (0px, 0px, 0px, 0px, 41px, 48px, 123px, 86px, '../img/sprite/sprite.png', 's-wallet', );
$spritesheet-width: 123px;
$spritesheet-height: 86px;
$spritesheet-image: '../img/sprite/sprite.png';
$spritesheet-sprites: ($s-arrowu, $s-burger, $s-coin, $s-cross, $s-health, $s-smile, $s-wallet, );
$spritesheet: (123px, 86px, '../img/sprite/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
